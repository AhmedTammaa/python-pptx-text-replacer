name: Publish Python package to PyPI and TestPyPI

on: push

jobs:
  build-n-publish:
    name: Build and publish Python package to PyPI and TestPyPI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["2.7", "3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest python-pptx
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

      - name: Lint with flake8
        if: matrix.python-version=='3.10'
        run: |
          python -m pip install flake8 
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
      - name: Install pypa/build
        if: matrix.python-version=='3.10'
        run: python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        if: matrix.python-version=='3.10'
        run: python -m build --sdist --wheel --outdir dist/
      - name: Publish package to Test PyPI
        if: matrix.python-version=='3.10'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        if: matrix.python-version=='3.10' && startsWith(github.ref, 'ref/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

